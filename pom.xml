<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <name>gtfs-lib</name>
  <description>A library to load and index GTFS feeds of arbitrary size using disk-backed storage</description>
  <url>https://github.com/conveyal/gtfs-lib</url>

  <groupId>com.conveyal</groupId>
  <artifactId>gtfs-lib</artifactId>
  <version>7.0.2</version>
  <packaging>jar</packaging>

  <licenses>
    <license>
      <name>BSD Two Clause</name>
      <url>https://opensource.org/licenses/BSD-2-Clause</url>
    </license>
  </licenses>

  <!-- Developer entries are provided for primary developers.
   For other contributors, see https://github.com/conveyal/gtfs-lib/graphs/contributors -->
  <developers>
    <developer>
      <name>Andrew Byrd</name>
      <email>abyrd@conveyal.com</email>
      <organization>Conveyal</organization>
      <organizationUrl>http://conveyal.com/</organizationUrl>
    </developer>
    <developer>
      <name>Landon Reed</name>
      <email>landon.reed@ibigroup.com</email>
      <organization>IBI Group</organization>
      <organizationUrl>https://ibigroup.com</organizationUrl>
    </developer>
    <developer>
      <name>Evan Siroky</name>
      <email>evan.siroky@ibigroup.com</email>
      <organization>IBI Group</organization>
      <organizationUrl>https://ibigroup.com</organizationUrl>
    </developer>
  </developers>

  <!-- Define where the source code for this project lives -->
  <scm>
    <connection>scm:git:https://github.com/conveyal/gtfs-lib.git</connection>
    <developerConnection>scm:git:ssh://git@github.com/conveyal/gtfs-lib.git</developerConnection>
    <url>https://github.com/conveyal/gtfs-lib</url>
  </scm>

  <!-- Define some variables to be used elsewhere in the build. -->
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>

  <!-- Define where the artifacts produced by this build will be deployed -->
  <distributionManagement>
    <!-- We are using Sonatype Nexus Staging instead of Maven Release plugin.
         Only a snapshot repo should be configured. Releases are done from that snapshot staging repo. -->
    <snapshotRepository>
      <id>ossrh</id>
      <url>https://oss.sonatype.org/content/repositories/snapshots</url>
    </snapshotRepository>
  </distributionManagement>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.8.1</version>
        <configuration>
          <!-- Target Java versions -->
          <source>1.8</source>
          <target>1.8</target>
        </configuration>
      </plugin>
      <plugin>
        <!-- Recommended way to deploy to OSSRH -->
        <groupId>org.sonatype.plugins</groupId>
        <artifactId>nexus-staging-maven-plugin</artifactId>
        <version>1.6.8</version>
        <extensions>true</extensions>
        <configuration>
          <serverId>ossrh</serverId>
          <nexusUrl>https://oss.sonatype.org/</nexusUrl>
          <!-- Release versions will be synced to Maven Central automatically. -->
          <autoReleaseAfterClose>true</autoReleaseAfterClose>
          <!-- Sets timeout for 30 minutes instead of the default of 5 minutes  -->
          <stagingProgressTimeoutMinutes>30</stagingProgressTimeoutMinutes>
        </configuration>
      </plugin>
      <plugin>
        <!-- Allow attaching Javadoc during releases -->
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>3.1.1</version>
        <configuration>
          <!-- Turn off Java 8 strict Javadoc checking -->
          <doclint>none</doclint>
        </configuration>
        <executions>
          <!-- Compress Javadoc into JAR and include that JAR when deploying. -->
          <execution>
            <id>attach-javadocs</id>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <!-- Include zipped source code in releases -->
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <version>3.1.0</version>
        <executions>
          <execution>
            <id>attach-sources</id>
            <goals>
              <goal>jar-no-fork</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <!-- Attach a version of the JAR that includes all dependencies -->
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <version>3.2.1</version>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
            <configuration>
              <!-- The shaded JAR will not be the main artifact for the project, it will be attached
                for deployment in the way source and docs are. -->
              <shadedArtifactAttached>true</shadedArtifactAttached>
              <shadedClassifierName>shaded</shadedClassifierName>
              <transformers>
                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                  <manifestEntries>
                    <Main-Class>com.conveyal.gtfs.GTFSMain</Main-Class>
                  </manifestEntries>
                </transformer>
              </transformers>
              <!-- signature files from included jars cause problems: http://stackoverflow.com/questions/999489 -->
              <filters>
                <filter>
                  <artifact>*:*</artifact>
                  <excludes>
                    <exclude>META-INF/*.SF</exclude>
                    <exclude>META-INF/*.DSA</exclude>
                    <exclude>META-INF/*.RSA</exclude>
                  </excludes>
                </filter>
              </filters>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- This plugin calculates code coverage and generates a report during the test phase in maven -->
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>0.8.4</version>
        <executions>
          <execution>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>
          <execution>
            <id>report</id>
            <phase>test</phase>
            <goals>
              <goal>report</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <!-- maven-surefire-plugin is needed to run unit tests. -->
      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.22.2</version>
      </plugin>
    </plugins>
  </build>

  <repositories>
    <repository>
      <id>osgeo</id>
      <name>OSGeo Release Repository</name>
      <url>https://repo.osgeo.org/repository/release/</url>
      <snapshots><enabled>false</enabled></snapshots>
      <releases><enabled>true</enabled></releases>
    </repository>
    <!--  used for importing java projects from github -->
    <repository>
      <id>jitpack.io</id>
      <url>https://jitpack.io</url>
    </repository>
  </repositories>

  <dependencies>
    <!-- CSV parser -->
    <dependency>
      <groupId>net.sourceforge.javacsv</groupId>
      <artifactId>javacsv</artifactId>
      <version>2.0</version>
    </dependency>
    <!-- Used for unit testing -->
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <version>5.7.0</version>
      <scope>test</scope>
    </dependency>
    <!-- Used for parameterized tests -->
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-params</artifactId>
      <version>5.6.2</version>
      <scope>test</scope>
    </dependency>
    <!-- Parses command line arguments to main methods. -->
    <dependency>
    	<groupId>com.beust</groupId>
    	<artifactId>jcommander</artifactId>
    	<version>1.30</version>
    </dependency>
    <!-- This package allows you to run tests on code that call System.exit() -->
    <dependency>
      <groupId>com.ginsberg</groupId>
      <artifactId>junit5-system-exit</artifactId>
      <version>1.1.1</version>
      <scope>test</scope>
    </dependency>
    <dependency>
    	<groupId>com.google.guava</groupId>
    	<artifactId>guava</artifactId>
    	<version>32.0.0-jre</version>
    </dependency>
    <dependency>
    	<groupId>org.locationtech.jts</groupId>
    	<artifactId>jts-core</artifactId>
    	<version>1.16.1</version>
    </dependency>
    <!-- Hamcrest is an assertion library that prints pretty messages when assertions fail -->
    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>java-hamcrest</artifactId>
      <version>2.0.0.0</version>
      <scope>test</scope>
    </dependency>
    <!-- Snapshotting library for testing -->
    <dependency>
      <groupId>com.github.conveyal</groupId>
      <artifactId>java-snapshot-matcher</artifactId>
      <version>3495b32f7b4d3f82590e0a2284029214070b6984</version>
      <scope>test</scope>
    </dependency>
    <!-- Disk-backed storage that looks like a Java map. -->
    <dependency>
    	<groupId>org.mapdb</groupId>
    	<artifactId>mapdb</artifactId>
    	<version>1.0.8</version>
    </dependency>
    <!-- Our logging API, no implementation specified as gtfs-lib is a library. -->
    <dependency>
    	<groupId>org.slf4j</groupId>
    	<artifactId>slf4j-api</artifactId>
    	<version>1.7.10</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-simple</artifactId>
      <version>1.7.25</version>
      <scope>runtime</scope>
    </dependency>
    <dependency>
    	<groupId>commons-io</groupId>
    	<artifactId>commons-io</artifactId>
    	<version>2.7</version>
    </dependency>
    <!-- Commons DBUtils is a collection of utility methods that help avoid boilerplate when working with SQL. -->
    <dependency>
      <groupId>commons-dbutils</groupId>
      <artifactId>commons-dbutils</artifactId>
      <version>1.6</version>
    </dependency>
    <!-- For uploading / downloading things from Amazon S3.
         We should really eliminate this functionality, it's out of scope for this gtfs-lib library. -->
    <dependency>
      <groupId>com.amazonaws</groupId>
      <artifactId>aws-java-sdk-s3</artifactId>
      <version>1.11.18</version>
    </dependency>
    <!-- Very efficient collections of primitive data types for Java. -->
    <dependency>
      <groupId>net.sf.trove4j</groupId>
      <artifactId>trove4j</artifactId>
      <version>3.0.3</version>
    </dependency>
    <!-- Another command line parameter parser - should we really have two of these in our dependencies? -->
    <dependency>
      <groupId>commons-cli</groupId>
      <artifactId>commons-cli</artifactId>
      <version>1.4</version>
    </dependency>
    <!-- JDBC support for Postgres databases. More modules would need to be added to access H2, SQLite etc. -->
    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
      <version>42.7.2</version>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-math3</artifactId>
      <version>3.0</version>
    </dependency>
    <!-- Database connection pooling, implements interfaces in JDBC -->
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-dbcp2</artifactId>
      <version>2.1.1</version>
    </dependency>
    <!-- GraphQL for Java, without HTTP layer, just query and response handling. -->
    <dependency>
      <groupId>com.graphql-java</groupId>
      <artifactId>graphql-java</artifactId>
      <version>17.4</version>
    </dependency>
    <!--  Contains special utils for things like converting escaped strings to unescaped strings for logging.  -->
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-text</artifactId>
      <version>1.10.0</version>
    </dependency>
  </dependencies>
</project>
